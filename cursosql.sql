CREATE database cursosql;
use cursosql;
CREATE TABLE INSTRUTOR (
    CODIGO INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,    
    INSTRUTOR VARCHAR(64) NOT NULL,                
    TELEFONE VARCHAR(9) NULL,                
    PRIMARY KEY(CODIGO)                
);

CREATE TABLE TIPO (
    CODIGO INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,    
    TIPO VARCHAR(32) NOT NULL,                
    PRIMARY KEY(CODIGO)                    
);

CREATE TABLE CURSO (
    CODIGO INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,    
    CURSO VARCHAR(64) NOT NULL,                
    TIPO INTEGER UNSIGNED NOT NULL,                
    INSTRUTOR INTEGER UNSIGNED NOT NULL,            
    VALOR DOUBLE NOT NULL,                    
    PRIMARY KEY(CODIGO),                    
    INDEX FK_TIPO(TIPO),                    
    INDEX FK_INSTRUTOR(INSTRUTOR),                
    FOREIGN KEY(TIPO) REFERENCES TIPO(CODIGO),        
    FOREIGN KEY(INSTRUTOR) REFERENCES INSTRUTOR(CODIGO)
);    

CREATE TABLE ALUNO (
    CODIGO INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,    
    ALUNO VARCHAR(64) NOT NULL,                
    ENDERECO VARCHAR(230) NOT NULL,                
    EMAIL VARCHAR(128) NOT NULL,                
    PRIMARY KEY(CODIGO)                    
);

CREATE TABLE PEDIDO (
    CODIGO INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,    
    ALUNO INTEGER UNSIGNED NOT NULL,            
    DATAHORA DATETIME NOT NULL,                
    PRIMARY KEY(CODIGO),                    
    INDEX FK_ALUNO(ALUNO),                    
    FOREIGN KEY(ALUNO) REFERENCES ALUNO(CODIGO)
);

CREATE TABLE PEDIDO_DETALHE (
    PEDIDO INTEGER UNSIGNED NOT NULL,            
    CURSO INTEGER UNSIGNED NOT NULL,            
    VALOR DOUBLE NOT NULL,                    
    INDEX FK_PEDIDO(PEDIDO),                
    INDEX FK_CURSO(CURSO),                    
    PRIMARY KEY(PEDIDO, CURSO),                
    FOREIGN KEY(PEDIDO) REFERENCES PEDIDO(CODIGO),        
    FOREIGN KEY(CURSO) REFERENCES CURSO(CODIGO)
);

INSERT INTO TIPO (CODIGO, TIPO) VALUES (1, 'Banco de dados');
INSERT INTO TIPO VALUES (2, 'Programação');
INSERT INTO TIPO VALUES (3, 'Modelagem de dados');

INSERT INTO INSTRUTOR (CODIGO, INSTRUTOR, TELEFONE) VALUES (1, 'André Milani', '1111-1111');
INSERT INTO INSTRUTOR VALUES (2, 'Carlos Tosin', '1212-1212');

INSERT INTO CURSO (CODIGO, CURSO, TIPO, INSTRUTOR, VALOR) VALUES (1, 'Java Fundamentos', 2, 2, 270);
INSERT INTO CURSO VALUES (2, 'Java Avançado', 2, 2, 330);
INSERT INTO CURSO VALUES (3, 'SQL Completo', 1, 1, 170);
INSERT INTO CURSO VALUES (4, 'Php Básico', 2, 1, 270);

INSERT INTO ALUNO (CODIGO, ALUNO, ENDERECO, EMAIL) VALUES (1, 'José', 'Rua XV de Novembro 72', 'jose@senai.com.br');
INSERT INTO ALUNO (CODIGO, ALUNO, ENDERECO, EMAIL) VALUES (2, 'Wagner', 'Av. Paulista', 'wagner@senai.com.br');
INSERT INTO ALUNO (CODIGO, ALUNO, ENDERECO, EMAIL) VALUES (3, 'Emílio', 'Rua Lajes 103, ap: 701', 'emilio@senai.com.br');
INSERT INTO ALUNO (CODIGO, ALUNO, ENDERECO, EMAIL) VALUES (4, 'Cris', 'Rua Tauney 22', 'cris@senai.com.br');
INSERT INTO ALUNO (CODIGO, ALUNO, ENDERECO, EMAIL) VALUES (5, 'Regina', 'Rua Salles 305', 'regina@senai.com.br');
INSERT INTO ALUNO (CODIGO, ALUNO, ENDERECO, EMAIL) VALUES (6, 'Fernando', 'Av. Central 30', 'fernando@senai.com.br');

INSERT INTO PEDIDO (CODIGO, ALUNO, DATAHORA) VALUES (1, 2, '2010-04-15 11:23:32');
INSERT INTO PEDIDO VALUES (2, 2, '2010-04-15 14:36:21');
INSERT INTO PEDIDO VALUES (3, 3, '2010-04-16 11:17:45');
INSERT INTO PEDIDO VALUES (4, 4, '2010-04-17 14:27:22');
INSERT INTO PEDIDO VALUES (5, 5, '2010-04-18 11:18:19');
INSERT INTO PEDIDO VALUES (6, 6, '2010-04-19 13:47:35');
INSERT INTO PEDIDO VALUES (7, 6, '2010-04-20 18:13:44');

INSERT INTO PEDIDO_DETALHE (PEDIDO, CURSO, VALOR) VALUES (1, 1, 270);
INSERT INTO PEDIDO_DETALHE VALUES (1, 2, 330);
INSERT INTO PEDIDO_DETALHE VALUES (2, 1, 270);
INSERT INTO PEDIDO_DETALHE VALUES (2, 2, 330);
INSERT INTO PEDIDO_DETALHE VALUES (2, 3, 170);
INSERT INTO PEDIDO_DETALHE VALUES (3, 4, 270);
INSERT INTO PEDIDO_DETALHE VALUES (4, 2, 330);
INSERT INTO PEDIDO_DETALHE VALUES (4, 4, 270);
INSERT INTO PEDIDO_DETALHE VALUES (5, 3, 170);
INSERT INTO PEDIDO_DETALHE VALUES (6, 3, 170);
INSERT INTO PEDIDO_DETALHE VALUES (7, 4, 270);

-- Exibe uma lista com os títulos e os tipos dos cursos ao lado
SELECT CURSO.CURSO, TIPO.TIPO
FROM CURSO
INNER JOIN TIPO ON CURSO.TIPO = TIPO.CODIGO;

-- Exibe uma lista com os títulos dos cursos, tipo do curso, nome do instrutor responsável pelo mesmo e telefone
SELECT CURSO.CURSO, TIPO.TIPO, INSTRUTOR.INSTRUTOR, INSTRUTOR.TELEFONE
FROM CURSO
INNER JOIN TIPO ON CURSO.TIPO = TIPO.CODIGO
INNER JOIN INSTRUTOR ON CURSO.INSTRUTOR = INSTRUTOR.CODIGO;

-- Exibe uma lista com o código, data e hora dos pedidos e os códigos dos cursos de cada pedido
SELECT PEDIDO.CODIGO AS CodigoPedido, PEDIDO.DATAHORA AS DataHoraPedido, PEDIDO_DETALHE.CURSO AS CodigoCurso
FROM PEDIDO
INNER JOIN PEDIDO_DETALHE ON PEDIDO.CODIGO = PEDIDO_DETALHE.PEDIDO;

-- Exibe uma lista com o código e data e hora dos pedidos, nome do aluno e os títulos dos cursos de cada pedido
SELECT 
    PEDIDO.CODIGO AS CodigoPedido, 
    PEDIDO.DATAHORA AS DataHoraPedido, 
    ALUNO.ALUNO AS NomeAluno, 
    CURSO.CURSO AS TituloCurso
FROM 
    PEDIDO
INNER JOIN 
    ALUNO ON PEDIDO.ALUNO = ALUNO.CODIGO
INNER JOIN 
    PEDIDO_DETALHE ON PEDIDO.CODIGO = PEDIDO_DETALHE.PEDIDO
INNER JOIN 
    CURSO ON PEDIDO_DETALHE.CURSO = CURSO.CODIGO;
